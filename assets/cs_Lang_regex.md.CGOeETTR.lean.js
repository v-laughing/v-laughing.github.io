import{_ as o,c as r,o as n,a4 as a,j as t,a as s}from"./chunks/framework.DdddRsJj.js";const k=JSON.parse('{"title":"正则表达式","description":"","frontmatter":{},"headers":[],"relativePath":"cs/Lang/regex.md","filePath":"cs/Lang/regex.md"}'),l={name:"cs/Lang/regex.md"};function d(i,e,c,h,g,p){return n(),r("div",null,[...e[0]||(e[0]=[a("",7),t("table",{tabindex:"0"},[t("thead",null,[t("tr",null,[t("th",{style:{"text-align":"center"}},"元字符"),t("th",null,"描述")])]),t("tbody",null,[t("tr",null,[t("td",{style:{"text-align":"center"}},"."),t("td",null,"句号匹配任意单个字符除了换行符。")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"[ ]"),t("td",null,"字符种类。匹配方括号内的任意字符。")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"[^ ]"),t("td",null,"否定的字符种类。匹配除了方括号里的任意字符")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"*"),t("td",null,"匹配>=0个重复的在*号之前的字符。")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"+"),t("td",null,"匹配>=1个重复的+号前的字符。")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"?"),t("td",null,"标记?之前的字符为可选.")]),t("tr",null,[t("td",{style:{"text-align":"center"},"n,m":""}),t("td",null,"匹配num个大括号之前的字符或字符集 (n <= num <= m).")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"(xyz)"),t("td",null,"字符集，匹配与 xyz 完全相等的字符串.")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"|"),t("td",null,"或运算符，匹配符号前或后的字符.")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"\\"),t("td",null,[s("转义字符,用于匹配一些保留的字符 "),t("code",null,"[ ] ( ) { } . * + ? ^ $ \\ |")])]),t("tr",null,[t("td",{style:{"text-align":"center"}},"^"),t("td",null,"从开始行开始匹配.")]),t("tr",null,[t("td",{style:{"text-align":"center"}},"$"),t("td",null,"从末端开始匹配.")])])],-1),a("",70)])])}const b=o(l,[["render",d]]);export{k as __pageData,b as default};
