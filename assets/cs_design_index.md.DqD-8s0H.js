import{_ as e,c as l,o as i,a4 as t}from"./chunks/framework.DdddRsJj.js";const c=JSON.parse('{"title":"一、前言","description":"","frontmatter":{},"headers":[],"relativePath":"cs/design/index.md","filePath":"cs/design/index.md"}'),r={name:"cs/design/index.md"};function h(m,a,d,n,o,s){return i(),l("div",null,[...a[0]||(a[0]=[t('<h1 id="一、前言" tabindex="-1">一、前言 <a class="header-anchor" href="#一、前言" aria-label="Permalink to &quot;一、前言&quot;">​</a></h1><p>设计模式是解决问题的方案，学习现有的设计模式可以做到经验复用。拥有设计模式词汇，在沟通时就能用更少的词汇来讨论，并且不需要了解底层细节。</p><h1 id="二、创建型" tabindex="-1">二、创建型 <a class="header-anchor" href="#二、创建型" aria-label="Permalink to &quot;二、创建型&quot;">​</a></h1><ul><li><a href="./singleton.html">单例.md</a></li><li><a href="./simple-factory.html">简单工厂.md</a></li><li><a href="./factory-method.html">工厂方法.md</a></li><li><a href="./abstract-factory.html">抽象工厂.md</a></li><li><a href="./generator.html">生成器.md</a></li><li><a href="./prototype.html">原型模式.md</a></li></ul><h1 id="三、行为型" tabindex="-1">三、行为型 <a class="header-anchor" href="#三、行为型" aria-label="Permalink to &quot;三、行为型&quot;">​</a></h1><ul><li><a href="./duty-chain.html">责任链.md</a></li><li><a href="./command.html">命令.md</a></li><li><a href="./interpreter.html">解释器.md</a></li><li><a href="./iterator.html">迭代器.md</a></li><li><a href="./mediator.html">中介者.md</a></li><li><a href="./memo.html">备忘录.md</a></li><li><a href="./abserver.html">观察者.md</a></li><li><a href="./state.html">状态.md</a></li><li><a href="./strategy.html">策略.md</a></li><li><a href="./temp-method.html">模板方法.md</a></li><li><a href="./visitor.html">访问者.md</a></li><li><a href="./null-object.html">空对象.md</a></li></ul><h1 id="四、结构型" tabindex="-1">四、结构型 <a class="header-anchor" href="#四、结构型" aria-label="Permalink to &quot;四、结构型&quot;">​</a></h1><ul><li><a href="./adapter.html">适配器.md</a></li><li><a href="./bridging.html">桥接.md</a></li><li><a href="./combination.html">组合.md</a></li><li><a href="./decoration.html">装饰.md</a></li><li><a href="./appearance.html">外观.md</a></li><li><a href="./flyweight.html">享元.md</a></li><li><a href="./agent.html">代理.md</a></li></ul><h1 id="参考资料" tabindex="-1">参考资料 <a class="header-anchor" href="#参考资料" aria-label="Permalink to &quot;参考资料&quot;">​</a></h1><ul><li>弗里曼. Head First 设计模式 [M]. 中国电力出版社, 2007.</li><li>Gamma E. 设计模式: 可复用面向对象软件的基础 [M]. 机械工业出版社, 2007.</li><li>Bloch J. Effective java[M]. Addison-Wesley Professional, 2017.</li><li><a href="http://www.oodesign.com/" target="_blank" rel="noreferrer">Design Patterns</a></li><li><a href="http://java-design-patterns.com/" target="_blank" rel="noreferrer">Design patterns implemented in Java</a></li><li><a href="http://www.programering.com/a/MTNxAzMwATY.html" target="_blank" rel="noreferrer">The breakdown of design patterns in JDK</a></li></ul>',10)])])}const p=e(r,[["render",h]]);export{c as __pageData,p as default};
