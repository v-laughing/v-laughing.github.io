import{_ as a,c as s,o as t,a4 as l}from"./chunks/framework.DdddRsJj.js";const e="data:image/png;base64,",g=JSON.parse('{"title":"基础概念","description":"","frontmatter":{},"headers":[],"relativePath":"cs/Lang/html.md","filePath":"cs/Lang/html.md"}'),h={name:"cs/Lang/html.md"};function n(p,i,r,o,d,k){return t(),s("div",null,[...i[0]||(i[0]=[l(`<h1 id="基础概念" tabindex="-1">基础概念 <a class="header-anchor" href="#基础概念" aria-label="Permalink to &quot;基础概念&quot;">​</a></h1><h2 id="名词解释" tabindex="-1">名词解释 <a class="header-anchor" href="#名词解释" aria-label="Permalink to &quot;名词解释&quot;">​</a></h2><h3 id="术语" tabindex="-1">术语 <a class="header-anchor" href="#术语" aria-label="Permalink to &quot;术语&quot;">​</a></h3><ul><li><strong>SGML</strong>：标准通用标记语言，用来定义电子文档结构和描述其内容，是所有电子文档标记语言的起源。</li><li><strong>HTML</strong>： 超文本标记语言，主要是用于规定怎么显示网页。</li><li><strong>XML</strong>：可扩展标记语言，主要用来传送及携带数据信息。</li><li><strong>XHTML</strong>：语法上更严格的HTML。</li><li><strong>DTD</strong>：文档类型定义，可定义合法的XML文档构建模块，使用一系列合法的元素来定义文档的结构。</li><li>DHTML：动态HTML，一般指由HTML、JavaScript、DOM 以及 CSS 组合在一起的网页。</li></ul><h3 id="兼容" tabindex="-1">兼容 <a class="header-anchor" href="#兼容" aria-label="Permalink to &quot;兼容&quot;">​</a></h3><p><strong>渐进增强</strong>：先针对低版本浏览器构建页面，保证最基本的功能。然后再针对高级浏览器进行效果、交互等改进和追加功能达到更好的用户体验。</p><p><strong>优雅降级</strong>：一开始就根据高版本浏览器构建完整的功能，然后再针对低版本浏览器进行兼容。</p><h3 id="属性" tabindex="-1">属性 <a class="header-anchor" href="#属性" aria-label="Permalink to &quot;属性&quot;">​</a></h3><p><strong>attribute</strong>：指dom 元素在文档中作为 html 标签的属性。 <strong>property</strong>：指dom 元素在 js 中作为对象的属性。</p><h3 id="性能衡量" tabindex="-1">性能衡量 <a class="header-anchor" href="#性能衡量" aria-label="Permalink to &quot;性能衡量&quot;">​</a></h3><p>web性能衡量： <strong>可用性</strong>：产品是否容易上手，用户能否完成任务，效率如何。从用户的角度来看 产品的质量。</p><p><strong>可访问性</strong>：Web 内容对于残障用户的可阅读和可理解性。</p><p><strong>可维护性</strong>：一般包含两个层次，一是当系统出现问题时，快速定位并解决问题的成本。 二是代码是否容易被人理解，是否容易修改和增强功能。</p><h2 id="html元素" tabindex="-1">html元素 <a class="header-anchor" href="#html元素" aria-label="Permalink to &quot;html元素&quot;">​</a></h2><p><strong>行内元素</strong>：只占据它对应标签的边框所包含的空间。不另起一行，内部只能包含文本和其他行内元素，没有宽高，上下边距始终为0。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">img button input select textarea label</span></span></code></pre></div><p><strong>块级元素</strong>：占据其父元素的整个宽度。另起一行，内部可任意元素。有宽高及边距。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">div ul ol li dd  p</span></span></code></pre></div><p><strong>空元素</strong>：标签内没有内容的元素，单标签闭合。</p><p><strong>link</strong>：定义文档与外部资源的关系，只存在head部分，可多次定义。 导入样式时，与@import的区别：</p><ul><li>作用：@import只有导入样式表的作用；link也可加载字体之类的资源。</li><li>加载顺序：@import 引入的CSS在页面加载完毕后被加载。link则同时加载。</li><li>兼容性：@import 是 CSS2.1 才有的语法；link不存在兼容 性问题。</li><li>DOM 可控性：@import不可通过JS；JS可插入link标签来改变样式。</li></ul><h3 id="doctype" tabindex="-1">Doctype <a class="header-anchor" href="#doctype" aria-label="Permalink to &quot;Doctype&quot;">​</a></h3><p><code>&lt;!DOCTYPE&gt;</code>告知浏览器的解析器用什么标准解析这个文档。指定后会以标准模式来 进行文档解析，否则以兼容模式。</p><p><strong>标准模式</strong>：浏览器的渲染方式和 JS 引擎的解析方式以该W3C标准运行。 <strong>兼容模式</strong>：以宽松的向后兼容的方式解析，保证旧页面的正常显示。</p><h1 id="html" tabindex="-1">HTML <a class="header-anchor" href="#html" aria-label="Permalink to &quot;HTML&quot;">​</a></h1><h2 id="html5" tabindex="-1">html5 <a class="header-anchor" href="#html5" aria-label="Permalink to &quot;html5&quot;">​</a></h2><p>HTML5 现在不是 SGML的子集。</p><p>与HTML相比，新增了一些功能：</p><ul><li>绘画 canvas；媒介播放元素video和 audio。</li><li>可长期存储数据的localStorage，浏览器关闭后数据不丢失。</li><li>语意化更好的内容元素，比如 article、footer、header、nav、section;</li><li>表单控件，calendar、date、time、email、url、search;</li><li>新的技术 webworker, websocket;</li><li>新的文档属性 document.visibilityState</li></ul><p>移除一些元素：</p><ul><li>纯表现的元素：basefont，big，center，font, s，strike，tt，u;</li><li>对可用性产生负面影响的元素：frame，frameset，noframes；</li></ul><h3 id="新标签的兼容性问题" tabindex="-1">新标签的兼容性问题 <a class="header-anchor" href="#新标签的兼容性问题" aria-label="Permalink to &quot;新标签的兼容性问题&quot;">​</a></h3><p>可以通过框架html5shim ：</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;!--[if lt IE 9]&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    &lt;script src=&quot;http://html5shim.googlecode.com/svn/trunk/html5.js&quot;&gt;&lt;/script&gt;</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">&lt;![endif]--&gt;</span></span></code></pre></div><h2 id="标签语义化" tabindex="-1">标签语义化 <a class="header-anchor" href="#标签语义化" aria-label="Permalink to &quot;标签语义化&quot;">​</a></h2><p>应当遵循，用正确的标签做正确的事情。好处：</p><ul><li>对于开发者，页面内容更有结构清晰，含义明确，易于理解。</li><li>对于浏览器、搜索引擎或爬虫，它们可以从中提取出更重要的信息（根据标签来确定上下文和各个关键字的权重），有助于SEO。</li><li>对于终端用户，屏幕阅读器会根据标签“阅读”文本以此帮助视障人群；在不支持CSS环境下，用户也能得到更有意义的内容。</li></ul><p>常见的语义化结构 <code>&lt;header&gt;</code>：定义网页或文章的头部区域。可包含logo、导航、搜索条等内容。 <code>&lt;main&gt;</code> ： 定义网页中的主体内容。 <code>&lt;footer&gt;</code>：定义网页或文章的尾部区域。可包含版权、备案等内容。 <code>&lt;nav&gt;</code>：标注页面导航链接。 <code>&lt;section&gt;</code>：标注为网页中的一个独立区域。 <code>&lt;article&gt;</code>：完整、独立的内容块；里面可包含独立的<code>&lt;header&gt;</code>、<code>&lt;footer&gt;</code>。 <code>&lt;aside&gt;</code>：定义周围主内容之外的内容块。 <code>&lt;figure&gt;</code>：代表一段独立的内容, 经常与<code>&lt;figcaption&gt;</code>配合使用, 可用于文章中的图片、插图、表格、代码段等等。 <code>&lt;figcaption&gt;</code>：定义 <code>&lt;figure&gt;</code>元素的标题。</p><p><img src="`+e+`" alt="image"></p><h2 id="标签含义" tabindex="-1">标签含义 <a class="header-anchor" href="#标签含义" aria-label="Permalink to &quot;标签含义&quot;">​</a></h2><h3 id="加粗" tabindex="-1">加粗 <a class="header-anchor" href="#加粗" aria-label="Permalink to &quot;加粗&quot;">​</a></h3><ul><li><code>&lt;b&gt;</code>大都用于基于实用目的突出显示，如关键字，产品名称。</li><li><code>&lt;strong&gt;</code>表达所指内容的强烈重要性、严重性或者紧急性。</li></ul><h3 id="斜体" tabindex="-1">斜体 <a class="header-anchor" href="#斜体" aria-label="Permalink to &quot;斜体&quot;">​</a></h3><ul><li><code>&lt;i&gt;</code>：表达某些学术性的术语或不同语气的词。</li><li><code>&lt;em&gt;</code>：突出词语以此强调语句所指的意义。</li></ul><h3 id="label" tabindex="-1">label <a class="header-anchor" href="#label" aria-label="Permalink to &quot;label&quot;">​</a></h3><p>用来标记表单控制的含义。当用户选择该标签时，浏览器会自动将焦点转到相应的表单控件上。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> for</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;Number:&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">“text“</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;</span></span></code></pre></div><h3 id="meta" tabindex="-1">meta <a class="header-anchor" href="#meta" aria-label="Permalink to &quot;meta&quot;">​</a></h3><p><code>&lt;meta&gt;</code> 元素可提供有关页面的元信息，比如针对搜索引擎和更新频度的描述和关键词。 位于文档的头部，不包含任何内容。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> charset</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;utf-8&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;    // 声明文档使用的字符编码</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;keywords&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt;      // 页面关键词者</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> name</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;author&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> content</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;name, email@gmail.com&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/&gt; // 网页作者信息</span></span></code></pre></div><h3 id="pre" tabindex="-1">pre <a class="header-anchor" href="#pre" aria-label="Permalink to &quot;pre&quot;">​</a></h3><p><code>&lt;pre&gt;</code> 定义预格式文本，保持文本在源码中的格式。所见即所得。</p><h3 id="head" tabindex="-1">head <a class="header-anchor" href="#head" aria-label="Permalink to &quot;head&quot;">​</a></h3><p><code>&lt;head&gt;</code> 标签定义文档的头部。一般包括</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">link</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">meta</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">script</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">style</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;, 以及 &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">title</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>其中<code>&lt;title&gt;</code>标签必须存在。</p><h3 id="表单标签" tabindex="-1">表单标签 <a class="header-anchor" href="#表单标签" aria-label="Permalink to &quot;表单标签&quot;">​</a></h3><h4 id="datalist" tabindex="-1">datalist <a class="header-anchor" href="#datalist" aria-label="Permalink to &quot;datalist&quot;">​</a></h4><p><strong>[H5]</strong> 规定输入域的选项列表，即输入时会展示出匹配的可选输入。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">input</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> type</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;text&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> list</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;animals&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">datalist</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> id</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;animals&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">option</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;dog&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;狗&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">	&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">option</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> label</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cat&quot;</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> value</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;猫&quot;</span><span style="--shiki-light:#B31D28;--shiki-light-font-style:italic;--shiki-dark:#FDAEB7;--shiki-dark-font-style:italic;"> /</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">datalist</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h4 id="output" tabindex="-1">output <a class="header-anchor" href="#output" aria-label="Permalink to &quot;output&quot;">​</a></h4><p><code>&lt;output&gt;</code> 标签作为计算结果输出显示。</p><h2 id="属性含义" tabindex="-1">属性含义 <a class="header-anchor" href="#属性含义" aria-label="Permalink to &quot;属性含义&quot;">​</a></h2><h3 id="autocomplete" tabindex="-1">autocomplete <a class="header-anchor" href="#autocomplete" aria-label="Permalink to &quot;autocomplete&quot;">​</a></h3><p>一般用在表单控件，启动该属性时，浏览器会根据用户的部分输入显示出可能的值，供用户直接选择。</p><h3 id="disabled-和-readonly" tabindex="-1">disabled 和 readonly <a class="header-anchor" href="#disabled-和-readonly" aria-label="Permalink to &quot;disabled 和 readonly&quot;">​</a></h3><ul><li>样式：disabled 会使文本框变灰，而 readonly 不会。</li><li>作用元素：readonly 只针对 input 和 textarea，而 disabled 可对所有表单元素。</li><li>表单提交：disabled元素的值不会被提交，而 readonly 会。</li></ul><h3 id="href-src" tabindex="-1">href&amp;src <a class="header-anchor" href="#href-src" aria-label="Permalink to &quot;href&amp;src&quot;">​</a></h3><p><strong>href</strong>：超文本链接，定义当前元素与目标资源之间的联系。</p><p><strong>src</strong>： 指向外部资源的位置，指向的内容将会嵌入到文档中当前标签所在位置；</p><p>href资源并行下载，src同步下载。</p><h2 id="seo" tabindex="-1">SEO <a class="header-anchor" href="#seo" aria-label="Permalink to &quot;SEO&quot;">​</a></h2><p>搜索引擎优化，利用搜索引擎的规则提高网站在搜索引擎内的自然排名。</p><ul><li>合理的 title、description、keywords：搜索引擎对这三项的权重逐个减小。</li><li>重要内容 HTML 代码放在最前。有的搜索引擎对抓取长度有限制。</li><li>爬虫不会执行 js ；搜索引擎不会抓取 iframe 中的内容。</li><li>非装饰性图片必须加 alt。</li><li>提高网站速度。</li></ul><h2 id="离线缓存" tabindex="-1">离线缓存 <a class="header-anchor" href="#离线缓存" aria-label="Permalink to &quot;离线缓存&quot;">​</a></h2><p>基于.appcache 文件的缓存机制，把需要离线缓存的资源事先下载至本地。 通过下列来应用离线缓存，其中<code>.manifest</code>文件定义了需要缓存或不需要的文件及回退情况下的文件。</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;!</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">DOCTYPE</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> HTML</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> manifest</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> = </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;cache.manifest&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">...</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">html</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h3 id="解析过程" tabindex="-1">解析过程 <a class="header-anchor" href="#解析过程" aria-label="Permalink to &quot;解析过程&quot;">​</a></h3><ul><li>在线的情况下，浏览器通过最新下载的manifest文件与本地旧的manifest文件对比，来决定是否更新缓存的资源。</li><li>离线的情况下，浏览器直接使用离线存储的资源。</li></ul><h2 id="iframe" tabindex="-1">iframe <a class="header-anchor" href="#iframe" aria-label="Permalink to &quot;iframe&quot;">​</a></h2><p>iframe 元素会创建包含另外一个文档的内联框架。</p><h3 id="缺点" tabindex="-1">缺点 <a class="header-anchor" href="#缺点" aria-label="Permalink to &quot;缺点&quot;">​</a></h3><ul><li>iframe 会阻塞主页面的 onload 事件。</li></ul><blockquote><p>window 的 onload 事件需要在所有 iframe 加载完毕后才会触发。在 Safari 和 Chrome 里，通过 JavaScript 动态设置 iframe 的 src 可以避免这种阻塞情况。</p></blockquote><ul><li>搜索引擎的检索程序不会解析这种页面。</li><li>iframe 和主页面共享连接池，而浏览器对相同域的连接有限制，所以会影响页面的并行加载。</li><li>小型的移动设备可能无法完全显示框架。</li></ul><h2 id="page-visibility-api" tabindex="-1">Page Visibility API <a class="header-anchor" href="#page-visibility-api" aria-label="Permalink to &quot;Page Visibility API&quot;">​</a></h2><p>监听用户主动或被动离开页面的事件。</p><p>通过监听网页的可见性，可以暂停某些消耗资源的网页行为：</p><ul><li>对服务器的轮询</li><li>网页动画</li><li>正在播放的音频或视频</li></ul><p>网页的可见性通过<code>document.visibilityState</code>属性表述，在下面的几种情况中，其值为<code>hidden</code>，表示页面不可见。</p><ul><li>浏览器最小化。</li><li>当前页面切换。</li><li>浏览器将要卸载（unload）页面。</li><li>操作系统触发锁屏屏幕。</li></ul><p>当<code>document.visibilityState</code>属性发生变化，<code>visibilitychange</code>事件会被触发。可以监听该事件，达到适当时候暂停资源的目的。</p><h2 id="资源协议头" tabindex="-1">资源协议头 <a class="header-anchor" href="#资源协议头" aria-label="Permalink to &quot;资源协议头&quot;">​</a></h2><p>HTML 规范中指出，引用资源不要加协议头<code>http</code>或者<code>https</code>，这称为protocol-relative URL。</p><p>因为如果当前访问的页面是通过 HTTPS 协议来浏览的，那么网页中的资源也只能通过 HTTPS 协议来引用，否则浏览器会出现警告信息。</p>`,95)])])}const E=a(h,[["render",n]]);export{g as __pageData,E as default};
